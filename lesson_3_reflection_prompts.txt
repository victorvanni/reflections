 ? When would you want to use a remote repository rather than keeping all your
 work local?

It becomes interesting to use a remote repository when you want to work on
the same project in different computers or with different people, also, it is
a good way to keep a backup in the cloud, so it becomes harder to lost your
project.
--------------------------------------------------------------------------------
 ? Why might you want to always pull changes manually rather than having Git
 automatically stay up-to-date with your remote repository?

I think it is better to pull changes manually because it could happen to update
some changes that other people did and it could change something that you're
working on, creating some problems.
--------------------------------------------------------------------------------
 ? Describe the differences between forks, clones, and branches. When would you
 use one instead of another?

Branches: Working in a repo, a branch is a line of working. You can create
	another line of working if you want to work on another feature, for example.
	You usually create another branch when you don't want to work on the main
	branch but also want to create something new or fix something without
	bothering the whole project. In the future you can merge your branch.

Clones: When you copy a repo from somewhere to another place you are cloning it.
	The only exception, here, is from github to github that is our next topic.
	You clone a repository when you want to work on that project.

Forks: It's similar to the clone but when it happens from a GitHub repo to
	another GitHub repo, you usually fork a repo when you don't have permission
	to work in the original project and you want to work on your own version.
--------------------------------------------------------------------------------
 ? What is the benefit of having a copy of the last known state of the remote
 sotred locally?

The benefit is to know when there will be a conflict between the local version
with the remote version. This way we know if the remote advanced.
--------------------------------------------------------------------------------
 ? How would you collaborate without using Git or GitHub? What would be easier,
 and what would be harder?

I don't know how this would be possible. And I say that because the question
used the word "collaborate" that means making better change to another project.
It could be done probably asking a copy for a person or something like this and
you'd probably need to give back your new version to the person to find the
differences between the new version and his version and it would be a ton of
work.
--------------------------------------------------------------------------------
 ? When would you want to make changes in a separate branch rather than directly
 in master? What benefits does each approach have?

Making changes in a separate branch allow you to push things to GitHub and to
get feedbacks on your development in a way that it won't affect the master
branch until you merge them.
Working on directly in master reduce the work that needs to be done, because
you just have to pull and push and the merge act will happen with it, you just
have to solve the conflicts.